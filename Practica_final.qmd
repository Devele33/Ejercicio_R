---
title: "practica_final"
format: html
editor: visual
---

Vamos a utilizar el dataset de semillas que se encuentra aquí: https://archive.ics.uci.edu/ml/datasets/seeds#

Primero vamos a descargarnos el dataset con el siguiente comando:

```{r}
library(tidyverse)
df_seeds <- read.table('https://archive.ics.uci.edu/ml/machine-learning-databases/00236/seeds_dataset.txt', col.names =c('area','perimetro','compacto','longitud','anchura','coeficient.asimetria','longitud.ranura','tipo'))
```

#### PREGUNTA 1

¿Cuantas filas y cuantas columnas tiene el dataframe df_seeds?

**Respuesta**:

```{r}
paste("El numero de filas es:", dim(df_seeds)[1])
paste("El numero de columnas es:", dim(df_seeds)[2])
```

#### PREGUNTA 2

Vamos a convertir en factor la columna tipo. Vamos a reemplazar los números por su correspondiente etiqueta (label). La correspondencia entre el código y el tipo es:

-   1 - Kama
-   2 - Rosa
-   3 - Canadian

Convierte en factor la columna tipo, respetando las etiquetas:

**Respuesta**:

```{r}
ftipo<- c("Kama","Rosa","Canadian")

df_seeds$tipo <- factor(ftipo)
df_seeds

```

#### PREGUNTA 3

¿Cual es la media del area de cada uno de los tipos?

**Respuesta**

```{r}
df_seeds |> group_by(tipo)|> summarise(media_area=mean(area))
```

#### PREGUNTA 4

¿Como se llama el siguiente tipo de gráfico?. ¿Qué representa la línea del centro de la caja?

```{r}
ggplot(df_seeds, aes(x=tipo, y=area)) + geom_boxplot()
```

**Respuesta**: 'Es un diagrama boxplot o diagrama de caja y bigotes En el se representa la linea del centro de la caja, que es la mediana. Significa que la mitad de los 3 tipos de trigo ocupa menos del 15 del area'

#### PREGUNTA 5

¿Como pintarías un diagrama de puntos (o scatterplot) con ggplot con las siguientes características? - En el eje X la variable compacto - En el eje Y la variable area - Cada tipo de semilla debería tener un color diferente

**Respuesta**:

```{r}
library(ggplot2)

ggplot(df_seeds,aes(x=compacto,y= area))+geom_point(aes(color=factor(df_seeds$tipo)))
```

#### PREGUNTA 6

¿Qué hace la siguiente línea?:

```{r}
df_seeds |> mutate(is_kama = tipo=='Kama') -> df_seeds
df_seeds
```

**Respuesta**: 'Crea una nueva columna en el que asigna mediante un valor boleano si el tipo es Kama o no. Is kama=true'

#### PREGUNTA 7

Vamos a dividir el conjunto de datos en test y training porque vamos a entrenar un modelo que me permita diferenciar si una semilla es de tipo Kama o no. ¿Por qué es aconsejable dividir el dataset en los grupos de train y test?

```{r}
set.seed(123) # Este set.seed hace que a todos nos generen los mismos número aleatorios
idx <- sample(1:nrow(df_seeds), 0.7*nrow(df_seeds))
df_seeds_train <- df_seeds[idx,]
df_seeds_test <- df_seeds[-idx,]
```

**Respuesta**: 'A la hora de entrenar un modelo, es importante dividir los datos en dos grupos para que nos devuelva los resultados esperados. Uno de los grupos es train, que son los datos con los que se le entrena, y el otro grupo es test, que son los datos con los que se va a evaluar si el modelo está haciendo las predicciones correctamente.'

#### PREGUNTA 8

Vamos a crear un modelo para realizar una clasificación binaria, donde le pasaremos como entrada las columnas: area, perimetro, compacto, longitud, coeficient.asimetria y longitud.ranura

¿Qué tipo de algoritmo o modelo debería usar?

**Respuesta**: ''En este caso utilizariamos una 'Distribución binomial' ya que dandole varias entradas esperamos que nos muestre dos unicos valores posibles como nos indica la clasificación binaria que son 0 o 1/ Si o No. Una vez tenemos una distribucion binomial podemos usar un modelo de regresión logisitica para ver la relación entre ambos factores, como puede ser en este caso, la presencia o ausencia de semillas''

#### PREGUNTA 9

Crea un modelo que me permita clasificar si una semilla es de tipo Kama o no con las siguientes columnas: area, perimetro, compacto, longitud, coeficient.asimetria, longitud.ranura

**Respuesta**:

```{r}
library(caret)
library(lattice)

X <- df_seeds[, c('area', 'perimetro', 'compacto', 'longitud', 'coeficient.asimetria', 'longitud.ranura')]
y <- factor(df_seeds$tipo == 'Kama', levels = c(FALSE, TRUE), labels = c('No Kama', 'Kama'))

# Dividimos datos en train y test
set.seed(42) 
train_indices <- createDataPartition(y, p = 0.8, list = FALSE)
X_train <- X[train_indices, ]
y_train <- y[train_indices]
X_test <- X[-train_indices, ]
y_test <- y[-train_indices]

# regresion logistica
model <- train(x = X_train, y = y_train, method = "glm", family = binomial)

predictions <- predict(model, newdata = X_test)

# Calculamos la precisión del modelo
accuracy <- mean(predictions == y_test)
paste("Precisión del modelo:", accuracy)
```

#### PREGUNTA 10

Si usamos un umbral de 0 en la salida del modelo (lo que equivale a probabilidad de 0.5 cuando usamos el predict con type='response') ¿Cuales son los valores de precisión y exhausitividad?

**Respuesta**.

```{r}
# Hacemos predicción con el conjunto de prueba
predicted_probabilities <- predict(model, newdata = X_test)

# Calculamos la precisión y la exhaustividad
precision <- sum(predicted_probabilities == "Kama" & y_test == "Kama") / sum(predicted_probabilities == "Kama")
recall <- sum(predicted_probabilities == "Kama" & y_test == "Kama") / sum(y_test == "Kama")

paste("Precisión:", precision)
paste("Exhaustividad:", recall)
```

#### PREGUNTA 11

¿Qué están haciendo las siguientes líneas?

```{r}
set.seed(123)
cl<-df_seeds |> select(area,perimetro,compacto,longitud,anchura,coeficient.asimetria,longitud.ranura) |> kmeans(3)
table(real=df_seeds$tipo,cluster=cl$cluster)
```

**Respuesta**: ''Se trata de una matriz de confusión en la que comparamos las etiquetas reales con los clusters generados para evaluar la calidad del agrupamiento.''
